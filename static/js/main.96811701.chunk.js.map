{"version":3,"sources":["assets/header.svg","assets/logo.svg","assets/highlights-pos.png","assets/highlights-customer-service.png","assets/highlights-loyalty.png","assets/pos-photos.png","assets/logo-white.png","assets/footer.svg","components/button.js","containers/header.js","containers/services.js","containers/cta_2.js","containers/specs.js","containers/cta.js","containers/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ButtonStyle","styled","button","props","margin","color","background","Button","name","HeaderWrapper","section","Navigation","div","TitleBlock","Header","src","Logo","alt","y","className","Curve","ServicesWrapper","ServiceBlocks","Blocks","Services","POS","Customer","CRM","CTAWrapper","CTA_2","SpecWrapper","ColumnContainer","Specs","Provider","value","size","Phones","CTA","FooterWrapper","FooterContainer","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96811701.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.a7262e2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.627d1e33.svg\";","module.exports = __webpack_public_path__ + \"static/media/highlights-pos.fb088a0a.png\";","module.exports = __webpack_public_path__ + \"static/media/highlights-customer-service.32e29f07.png\";","module.exports = __webpack_public_path__ + \"static/media/highlights-loyalty.0f3bc1c3.png\";","module.exports = __webpack_public_path__ + \"static/media/pos-photos.631a8eba.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.1e958e47.png\";","module.exports = __webpack_public_path__ + \"static/media/footer.344e3c2f.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonStyle = styled.button`\n    padding: 15px 20px;\n    border-radius: 6px;\n    width: fit-content;\n    font-size: 16px;\n    margin:${props => props.margin};\n    text-align: center;\n    outline: none; \n    border: none;\n    color:${props => props.color};\n    background: ${props => props.background};\n`\nconst Button = (props) => {\n    \n    return (\n        <ButtonStyle color={props.color} background={props.background} margin={props.margin}>\n            {props.name}\n        </ButtonStyle>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\nimport Curve from '../assets/header.svg';\nimport Logo from '../assets/logo.svg';\nimport Button from '../components/button';\nimport {ParallaxProvider, Parallax} from 'react-scroll-parallax';\n\nconst HeaderWrapper = styled.section`\n    padding: 0 28px 0 40px; \n    position: relative;\n    height: 350px;\n    background: linear-gradient(312.45deg, #e5f8f4 34.75%, #eefafd 70.82%);\n    img{\n        position: absolute;\n        left: 0;\n        top: 350px;\n        width: 100%;\n        z-index: -1;\n    }\n`\n\nconst Navigation = styled.div`\n    top: 40px;\n    max-width: 1080px;\n    margin: auto;\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    img{\n        position: relative;\n        width: 200px;\n        top: 0;\n        z-index: 0;\n    }\n`\n\nconst TitleBlock = styled.div`\n    position: relative;\n    padding: 180px 0;\n    width: 100%;\n    margin: auto;\n    z-index: 1000;\n    h2{\n        display: block;\n        color: grey;\n        line-height: 0;\n        font-size: 40px;\n        font-weight: 400;\n        letter-spacing: 0.06em;\n    }\n    .big {\n        font-size: 240px;\n        line-height: 0;\n        color:#002b3a;\n        font-weight:500;\n        letter-spacing: 0;\n    }\n`\n\n\nconst Header = () => {\n\n    return (\n        <ParallaxProvider>\n            <HeaderWrapper>\n                    <Navigation>\n                        <img src={Logo} alt=\"SaltPay Logo\"/>\n                        <div>\n                            <Button color=\"#002b3a\" background=\"#fff\" name=\"Login\" margin=\"0 12px\"/>\n                            <Button background=\"#002b3a\" color=\"#fff\" name=\"Request\"margin=\"0 12px\"/>\n                        </div>\n                    </Navigation>\n                    <Parallax y={[30, -30]}>\n                        <TitleBlock>\n                            <h2>It's time to feel</h2>\n                            <h2 className=\"big\">big</h2>\n                        </TitleBlock>\n                    </Parallax> \n                <img src={Curve} alt=\"screen-buffer\"/>\n            </HeaderWrapper>\n        </ParallaxProvider>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\nimport POS from '../assets/highlights-pos.png';\nimport Customer from '../assets/highlights-customer-service.png';\nimport CRM from '../assets/highlights-loyalty.png';\n\n\nconst ServicesWrapper = styled.section`\n    top: 300px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    .inner-wrapper {\n        max-width: 1080px;\n        margin: auto;\n        p {\n            max-width: 800px;\n            margin: 35px auto 50px;\n            font-size: 25px;\n            font-weight: 300;\n            line-height: 1.8;\n        }\n    }\n`\n\nconst ServiceBlocks = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`\n\nconst Blocks = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n    img {\n        width: 100%;\n    }\n    p {\n        font-size: 20px !important;\n        flont-weight: 400;\n        line-height: 1.5 !important;\n    }\n`\n\nconst Services = () => {\n    return (\n        <ServicesWrapper>\n            <div className=\"inner-wrapper\">\n            <h4>Sell. Engage. Grow.</h4>\n            <p>Top quality and affordable tools that help you run your business with the efficiency of the big players.</p>\n            <ServiceBlocks>\n                <Blocks>\n                    <img src={POS} alt=\"Phone Screen\"/>\n                    <p>An easy-to-use, modern, robust and fast POS.</p>\n                </Blocks>\n                <Blocks>\n                    <img src={Customer} alt=\"Woman using phone\"/>\n                    <p>Amazingly fast and reliable customer service.</p>\n                </Blocks>\n                <Blocks>\n                    <img src={CRM} alt=\"Customers in shop\"/>\n                    <p>CRM and Loyalty to keep your clients coming back.</p>\n                </Blocks>\n            </ServiceBlocks>\n            </div>\n        </ServicesWrapper>\n    )\n}\n\nexport default Services;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../components/button';\n\nconst CTAWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    padding: 40px 0;\n    margin: 350px auto 150px;\n    h4 {\n        margin: 0;\n    }\n    p {\n        font-size: 20px;\n        letter-spacing: 0.02em;\n        margin: 35px;\n        font-weight: 300;\n    }\n    button {\n        margin-top: 30px;\n    }\n`\n\n\nconst CTA_2 = () => {\n    return (\n        <CTAWrapper>\n            <h4>A short onboarding for a long lasting relationship.</h4>\n            <p>Our agent will visit you, onboard you and activate your POS. Everything in under 10 minutes.</p>\n            <Button color=\"white\" background=\"#00b2ca\" name=\"Request now\" margin=\"auto\"/>\n        </CTAWrapper>\n    )\n}\n\nexport default CTA_2;","import React from 'react';\nimport styled from 'styled-components';\nimport Phones from '../assets/pos-photos.png';\nimport {IconContext} from 'react-icons';\nimport { MdWifi,MdBatteryChargingFull, MdSimCard, MdStayPrimaryPortrait, MdCameraAlt} from \"react-icons/md\";\nimport {FcNfcSign} from \"react-icons/fc\";\nimport { FiPrinter } from \"react-icons/fi\";\n\n\n\nconst SpecWrapper = styled.section`\n    position: relative;\n    width: 100%;\n`\n\nconst ColumnContainer = styled.div`\n    max-width: 1080px;\n    margin: auto;\n    display: flex;\n    flex-direction: row;\n    text-align: left;\n    .spec-list{\n        width: 50%;\n        h4{\n            margin: 0 0 40px;\n        }\n        ul{\n            padding: 0;\n            list-style: none;\n            li{\n                line-height: 3.5;\n                letter-spacing: 0.02em;\n                p {\n                    display: inline-block;\n                    padding-left: 20px;\n                    margin: 0;\n                }\n            }\n        }\n    }\n    .image-container{\n        width: 50%;\n        img{\n            width: 100%;\n        }\n    }\n`\n\n\n\nconst Specs = () => {\n    return (\n        <SpecWrapper>\n            <IconContext.Provider value={{ size: \"1.5em\"}}>\n            <ColumnContainer>\n                <div className=\"spec-list\">\n                  <h4>POS specs that matter for your day-to-day</h4> \n                  <ul>\n                      <li><MdWifi/><p>4G/3G/2G, Wi-Fi, Bluetooth and cable</p></li>\n                      <li><MdBatteryChargingFull/><p>Long-lasting battery (5250mAh)</p></li>\n                      <li><MdSimCard/><p>SIM card already included</p></li>\n                      <li><FcNfcSign/><p>contactless payments</p></li>\n                      <li><FiPrinter/><p>High-speed thermal printer</p></li>\n                      <li><MdStayPrimaryPortrait/><p>5” High Definition display</p></li>\n                      <li><MdCameraAlt/><p>5MP auto zoom camera for code scanning</p></li>\n                  </ul>\n                </div>\n                <div className=\"image-container\">\n                  <img src={Phones} alt=\"Customers holding phones\"/>  \n                </div>\n            </ColumnContainer>\n            </IconContext.Provider>\n        </SpecWrapper>\n    )\n}\n\nexport default Specs;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../components/button';\n\nconst CTAWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    padding: 40px 0;\n    margin: 150px auto 350px;\n    h4 {\n        margin: 0;\n    }\n    p {\n        font-size: 20px;\n        letter-spacing: 0.02em;\n        margin: 35px;\n        font-weight: 300;\n    }\n    button {\n        margin-top: 30px;\n    }\n`\n\n\nconst CTA = () => {\n    return (\n        <CTAWrapper>\n            <h4>Questions?</h4>\n            <p>No problem. We will reach out to you and explain everything you want to know :)</p>\n            <Button color=\"white\" background=\"#00b2ca\" name=\"Get Contacted\" margin=\"auto\"/>\n        </CTAWrapper>\n    )\n}\n\nexport default CTA;","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from '../assets/logo-white.png';\nimport Curve from '../assets/footer.svg';\n\nconst FooterWrapper = styled.section`\n    position: relative;\n    max-width: 1080px;\n    margin: auto;\n    flex-direction: row;\n    flex-wrap: wrap;\n    display: flex;\n    justify-content: space-evenly;\n    color: white;\n    .footer-nav {\n        display: flex;\n        justify-content: space-evenly;\n        flex-direction: row;\n        width: 40%;\n    }\n    .contact {\n        display: flex;\n        justify-content: space-between;\n        flex-direction: row;\n        align-items: baseline;\n        padding-left: 50px;\n        width: 60%;\n        .image-container{\n            img{\n                position: relative;\n                top: 0;\n                left: auto;\n                width: 150px;\n            }\n        }\n    }\n`\nconst FooterContainer = styled.section`\n    position: relative;\n    width: 100%;\n    background: #002B3A;\n    padding: 100px 0;\n    bottom: 0;\n    img{\n        position: absolute;\n        width: 100%;\n        left: 0;\n        bottom: 262px;\n        z-index: 100;\n    }\n`\n\n\n\nconst  Footer = () => {\n    return (\n        <FooterContainer>\n            <img src={Curve} alt=\"Curve\"/>\n            <FooterWrapper>\n                <div className=\"footer-nav\">\n                    <h3>Home</h3>\n                    <h3>About Us</h3>\n                    <h3>Careers</h3>\n                </div>\n                <div className=\"contact\">\n                    <h3>help@saltpay.co</h3>\n                    <h3>+354 560-1600</h3>\n                    <div className=\"image-container\">\n                         <img src={Logo} alt=\"logo\"/>\n                    </div>\n                </div>\n            </FooterWrapper>\n        </FooterContainer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './containers/header';\nimport Services from './containers/services';\nimport CTA_2 from './containers/cta_2';\nimport Specs from './containers/specs';\nimport CTA from './containers/cta';\nimport Footer from './containers/footer';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Services/>\n      <CTA_2/>\n      <Specs/>\n      <CTA/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}